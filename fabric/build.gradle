plugins {
    id 'fabric-loom' version '1.0-SNAPSHOT'
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

version = mod_version
group = 'schmoller.mods'
archivesBaseName = "RockGen-${minecraft_version}"

repositories {
    // Add repositories to retrieve artifacts from in here.
    // You should only use this when depending on other mods because
    // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
    // See https://docs.gradle.org/current/userguide/declaring_repositories.html
    // for more information about repositories.
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // Uncomment the following line to enable the deprecated Fabric API modules.
    // These are included in the Fabric API production distribution and allow you to update your mod to the latest modules at a later more convenient time.

    // modImplementation "net.fabricmc.fabric-api:fabric-api-deprecated:${project.fabric_version}"
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

loom {
    runs {
        client {
            client()

            source = sourceSets.main
            environment = "client"
        }

        server {
            server()
        }
    }

    runConfigs.configureEach {
        ideConfigGenerated = true
    }

    mixin {
        defaultRefmapName = "rockgen.refmap.json"
    }

    mods {
        rockgen {
            sourceSet sourceSets.main
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    // Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
    it.options.release = 17
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }

    manifest {
        attributes([
                "Specification-Title"     : "rockgen",
                "Specification-Vendor"    : "schmollermods",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "schmollermods",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])

    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar

            groupId = project.group
            version = project.version
            artifactId = project.archivesBaseName

            pom {
                name = project.archivesBaseName
                description = "Minecraft mod for controllig cobblestone (and other) generation."
                url = 'https://github.com/Schmoller/RockGen-Mod'
                scm {
                    url = 'https://github.com/Schmoller/RockGen-Mod'
                    connection = 'scm:git:git@github.com:Schmoller/RockGen-Mod.git'
                    developerConnection = 'scm:git:git@github.com:Schmoller/RockGen-Mod.git'
                }
                issueManagement {
                    system = 'github'
                    url = 'https://github.com/Schmoller/RockGen-Mod/issues'
                }

                developers {
                    developer {
                        id = 'Schmoller'
                        name = 'Steven Schmoll'
                    }
                }
            }
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/build/artifacts"
        }
    }
}
